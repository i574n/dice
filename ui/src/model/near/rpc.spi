open rust_operators

inl types () =
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::RpcInput\")>] type crate_model_near_rpc_RpcInput = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::ErrorCauseInfo\")>] type crate_model_near_rpc_ErrorCauseInfo = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::ErrorCause\")>] type crate_model_near_rpc_ErrorCause = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::RpcError\")>] type crate_model_near_rpc_RpcError = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::TransferDetail\")>] type crate_model_near_rpc_TransferDetail = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::GasProfile\")>] type crate_model_near_rpc_GasProfile = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::Metadata\")>] type crate_model_near_rpc_Metadata = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::OutcomeDetail\")>] type crate_model_near_rpc_OutcomeDetail = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::ReceiptsOutcome\")>] type crate_model_near_rpc_ReceiptsOutcome = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::ActionDetail\")>] type crate_model_near_rpc_ActionDetail = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::ReceiptDetail\")>] type crate_model_near_rpc_ReceiptDetail = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::Receipt\")>] type crate_model_near_rpc_Receipt = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::TransactionStatus\")>] type crate_model_near_rpc_TransactionStatus = class end"
    global "[<Fable.Core.Erase; Fable.Core.Emit(\"crate::model::near::rpc::RpcResponse\")>] type crate_model_near_rpc_RpcResponse = class end"

nominal rpc_input' = $"crate_model_near_rpc_RpcInput"
nominal error_cause_info' = $"crate_model_near_rpc_ErrorCauseInfo"
nominal error_cause' = $"crate_model_near_rpc_ErrorCause"
nominal rpc_error' = $"crate_model_near_rpc_RpcError"
nominal transfer_detail' = $"crate_model_near_rpc_TransferDetail"
nominal gas_profile' = $"crate_model_near_rpc_GasProfile"
nominal metadata' = $"crate_model_near_rpc_Metadata"
nominal outcome_detail' = $"crate_model_near_rpc_OutcomeDetail"
nominal receipts_outcome' = $"crate_model_near_rpc_ReceiptsOutcome"
nominal action_detail' = $"crate_model_near_rpc_ActionDetail"
nominal receipt_detail' = $"crate_model_near_rpc_ReceiptDetail"
nominal receipt' = $"crate_model_near_rpc_Receipt"
nominal transaction_status' = $"crate_model_near_rpc_TransactionStatus"
nominal rpc_response' = $"crate_model_near_rpc_RpcResponse"

type rpc_input =
    {
        jsonrpc : sm'.std_string
        id : sm'.std_string
        method : sm'.std_string
        params : array_base sm'.std_string
    }

type error_cause_info =
    {
        error_message : optionm'.option' sm'.std_string
        requested_transaction_hash : optionm'.option' sm'.std_string
    }

type error_cause =
    {
        name : sm'.std_string
        info : optionm'.option' error_cause_info
    }

type rpc_error =
    {
        name : sm'.std_string
        cause : error_cause
        code : i32
        message : sm'.std_string
        data : sm'.std_string
    }

type transfer_detail =
    {
        deposit : sm'.std_string
    }

type gas_profile =
    {
        cost : sm'.std_string
        cost_category : sm'.std_string
        gas_used : sm'.std_string
    }

type metadata =
    {
        gas_profile : array_base gas_profile
        version : u8
    }

type outcome_detail =
    {
        executor_id : sm'.std_string
        gas_burnt : u64
        logs : array_base sm'.std_string
        metadata : metadata
        receipt_ids : array_base sm'.std_string
        status : mapm.hash_map sm'.std_string sm'.std_string
    }

type receipts_outcome =
    {
        block_hash : sm'.std_string
        id : sm'.std_string
        outcome : outcome_detail
    }

type action_detail =
    {
        actions : array_base (mapm.hash_map sm'.std_string transfer_detail)
        gas_price : sm'.std_string
        input_data_ids : array_base sm'.std_string
        output_data_receivers : array_base sm'.std_string
        signer_id : sm'.std_string
        signer_public_key : sm'.std_string
    }

type receipt_detail =
    {
        action : action_detail
    }

type receipt =
    {
        predecessor_id : sm'.std_string
        receipt : receipt_detail
        receipt_id : sm'.std_string
        receiver_id : sm'.std_string
    }

type transaction_status =
    {
        receipts : array_base receipt
        receipts_outcome : array_base receipts_outcome
    }

type rpc_response =
    {
        jsonrpc : sm'.std_string
        result : optionm'.option' transaction_status
        error : optionm'.option' rpc_error
        id : optionm'.option' sm'.std_string
    }

inl format_error (error : _ rpc_error) =
    match error |> optionm'.unbox with
    | Some { cause = { name = cause_name } data name message } =>
        ($'string !name + ": " + string !message + " - " + string !data + " (" + string !cause_name + ")"' : string)
        |> Some
    | _ => None

inl rpc_input_box ({ jsonrpc id method params } : rpc_input) : rpc_input' =
    inl params = params |> am'.to_vec
    !\($'"crate::model::near::rpc::RpcInput { jsonrpc: !jsonrpc, id: !id, method: !method, params: !params }"')

inl error_cause_info_box ({ error_message requested_transaction_hash } : error_cause_info) : error_cause_info' =
    !\($'"crate::model::near::rpc::ErrorCauseInfo { error_message: !error_message, requested_transaction_hash: !requested_transaction_hash }"')

inl error_cause_box ({ name info } : error_cause) : error_cause' =
    inl info = info |> optionm'.map error_cause_info_box
    !\($'"crate::model::near::rpc::ErrorCause { name: !name, info: !info }"')

inl rpc_error_box ({ name cause code message data } : rpc_error) : rpc_error' =
    inl cause = cause |> error_cause_box
    !\($'"crate::model::near::rpc::RpcError { name: !name, cause: !cause, code: !code, message: !message, data: !data }"')

inl transfer_detail_box ({ deposit } : transfer_detail) : transfer_detail' =
    !\($'"crate::model::near::rpc::TransferDetail { deposit: !deposit }"')

inl gas_profile_box ({ cost cost_category gas_used } : gas_profile) : gas_profile' =
    !\($'"crate::model::near::rpc::GasProfile { cost: !cost, cost_category: !cost_category, gas_used: !gas_used }"')

inl metadata_box ({ gas_profile version } : metadata) : metadata' =
    inl gas_profile = gas_profile |> am'.to_vec
    !\($'"crate::model::near::rpc::Metadata { gas_profile: !gas_profile, version: !version }"')

inl outcome_detail_box ({ executor_id gas_burnt logs metadata receipt_ids status } : outcome_detail) : outcome_detail' =
    inl logs = logs |> am'.to_vec
    inl receipt_ids = receipt_ids |> am'.to_vec
    !\($'"crate::model::near::rpc::OutcomeDetail { executor_id: !executor_id, gas_burnt: !gas_burnt, logs: !logs, metadata: !metadata, receipt_ids: !receipt_ids, status: !status }"')

inl receipts_outcome_box ({ block_hash id outcome } : receipts_outcome) : receipts_outcome' =
    inl outcome = outcome |> outcome_detail_box
    !\($'"crate::model::near::rpc::ReceiptsOutcome { block_hash: !block_hash, id: !id, outcome: !outcome }"')

inl action_detail_box ({ actions gas_price input_data_ids output_data_receivers signer_id signer_public_key } : action_detail) : action_detail' =
    inl actions = actions |> am'.to_vec
    inl input_data_ids = input_data_ids |> am'.to_vec
    inl output_data_receivers = output_data_receivers |> am'.to_vec
    !\($'"crate::model::near::rpc::ActionDetail { actions: !actions, gas_price: !gas_price, input_data_ids: !input_data_ids, output_data_receivers: !output_data_receivers, signer_id: !signer_id, signer_public_key: !signer_public_key }"')

inl receipt_detail_box ({ action } : receipt_detail) : receipt_detail' =
    inl action = action |> action_detail_box
    !\($'"crate::model::near::rpc::ReceiptDetail { action: !action }"')

inl receipt_box ({ predecessor_id receipt receipt_id receiver_id } : receipt) : receipt' =
    inl receipt = receipt |> receipt_detail_box
    !\($'"crate::model::near::rpc::Receipt { predecessor_id: !predecessor_id, receipt: !receipt, receipt_id: !receipt_id, receiver_id: !receiver_id }"')

inl transaction_status_box ({ receipts receipts_outcome } : transaction_status) : transaction_status' =
    inl receipts = receipts |> am'.to_vec
    inl receipts_outcome = receipts_outcome |> am'.to_vec
    !\($'"crate::model::near::rpc::TransactionStatus { receipts: !receipts, receipts_outcome: !receipts_outcome }"')

inl rpc_response_box ({ jsonrpc result error id } : rpc_response) : rpc_response' =
    inl result = result |> optionm'.map transaction_status_box
    inl error = error |> optionm'.map rpc_error_box
    !\($'"crate::model::near::rpc::RpcResponse { jsonrpc: !jsonrpc, result: !result, error: !error, id: !id }"')
    
inl rpc_input_unbox (x : rpc_input') : rpc_input =
    inl x = join x
    inl jsonrpc = !\($'"!x.jsonrpc"')
    inl id = !\($'"!x.id"')
    inl method = !\($'"!x.method"')
    inl params =
        !\($'"!x.params"')
        |> am'.from_vec
        |> fun (a x : _ i32 _) => join x
    { jsonrpc; id; method; params }

inl error_cause_info_unbox (x : error_cause_info') : error_cause_info =
    inl x = join x
    inl error_message = !\($'"!x.error_message"')
    inl requested_transaction_hash = !\($'"!x.requested_transaction_hash"')
    { error_message; requested_transaction_hash }

inl error_cause_unbox (x : error_cause') : error_cause =
    inl x = join x
    inl name = !\($'"!x.name"')
    inl info = !\($'"!x.info"') |> optionm'.map error_cause_info_unbox
    { name; info }

inl rpc_error_unbox (x : rpc_error') : rpc_error =
    inl x = join x
    inl name = !\($'"!x.name"')
    inl cause = !\($'"!x.cause"') |> error_cause_unbox
    inl code = !\($'"!x.code"')
    inl message = !\($'"!x.message"')
    inl data = !\($'"!x.data"')
    { name; cause; code; message; data }

inl transfer_detail_unbox (x : transfer_detail') : transfer_detail =
    inl x = join x
    inl deposit = !\($'"!x.deposit"')
    { deposit }

inl gas_profile_unbox (x : gas_profile') : gas_profile =
    inl x = join x
    inl cost = !\($'"!x.cost"')
    inl cost_category = !\($'"!x.cost_category"')
    inl gas_used = !\($'"!x.gas_used"')
    { cost; cost_category; gas_used }

inl metadata_unbox (x : metadata') : metadata =
    inl x = join x
    inl gas_profile = !\($'"!x.gas_profile"') |> am'.from_vec |> am'.map_vec gas_profile_unbox |> fun (a x : _ i32 _) => x
    inl version = !\($'"!x.version"')
    { gas_profile; version }

inl outcome_detail_unbox (x : outcome_detail') : outcome_detail =
    inl x = join x
    inl executor_id = !\($'"!x.executor_id"')
    inl gas_burnt = !\($'"!x.gas_burnt"')
    inl logs = !\($'"!x.logs"') |> am'.from_vec |> fun (a x : _ i32 _) => x
    inl metadata = !\($'"!x.metadata"') |> metadata_unbox
    inl receipt_ids = !\($'"!x.receipt_ids"') |> am'.from_vec |> fun (a x : _ i32 _) => x
    inl status = !\($'"!x.status"')
    { executor_id; gas_burnt; logs; metadata; receipt_ids; status }

inl receipts_outcome_unbox (x : receipts_outcome') : receipts_outcome =
    inl x = join x
    inl block_hash = !\($'"!x.block_hash"')
    inl id = !\($'"!x.id"')
    inl outcome = !\($'"!x.outcome"') |> outcome_detail_unbox
    { block_hash; id; outcome }

inl action_detail_unbox (x : action_detail') : action_detail =
    inl x = join x
    inl actions = !\($'"!x.actions"') |> am'.from_vec |> am'.map_vec (mapm.map transfer_detail_unbox) |> fun (a x : _ i32 _) => x
    inl gas_price = !\($'"!x.gas_price"')
    inl input_data_ids = !\($'"!x.input_data_ids"') |> am'.from_vec |> fun (a x : _ i32 _) => x
    inl output_data_receivers = !\($'"!x.output_data_receivers"') |> am'.from_vec |> fun (a x : _ i32 _) => x
    inl signer_id = !\($'"!x.signer_id"')
    inl signer_public_key = !\($'"!x.signer_public_key"')
    { actions; gas_price; input_data_ids; output_data_receivers; signer_id; signer_public_key }

inl receipt_detail_unbox (x : receipt_detail') : receipt_detail =
    inl x = join x
    inl action = !\($'"!x.action"') |> action_detail_unbox
    { action }

inl receipt_unbox (x : receipt') : receipt =
    inl x = join x
    inl predecessor_id = !\($'"!x.predecessor_id"')
    inl receipt = !\($'"!x.receipt"') |> receipt_detail_unbox
    inl receipt_id = !\($'"!x.receipt_id"')
    inl receiver_id = !\($'"!x.receiver_id"')
    { predecessor_id; receipt; receipt_id; receiver_id }

inl transaction_status_unbox (x : transaction_status') : transaction_status =
    inl x = join x
    inl receipts = !\($'"!x.receipts"') |> am'.from_vec |> am'.map_vec receipt_unbox |> fun (a x : _ i32 _) => x
    inl receipts_outcome = !\($'"!x.receipts_outcome"') |> am'.from_vec |> am'.map_vec receipts_outcome_unbox |> fun (a x : _ i32 _) => x
    { receipts; receipts_outcome }

inl rpc_response_unbox (x : rpc_response') : rpc_response =
    inl x = join x
    inl jsonrpc = !\($'"!x.jsonrpc"')
    inl result = !\($'"!x.result"') |> optionm'.map transaction_status_unbox
    inl error = !\($'"!x.error"') |> optionm'.map rpc_error_unbox
    inl id = !\($'"!x.id"')
    { jsonrpc; result; error; id }
