open rust_operators

inl render () =
    print_static "<transactions.render>"
    leptos.log $'"transactions.render (1)"'

    inl global_state : state.global_state = leptos.use_context () |> optionm'.unwrap
    
    inl { accounts txns } = hooks.use_transactions.render global_state

    inl (settings_visible, set_settings_visible) = leptos.create_signal false

    inl settings_button =
        inl on_click () =
            set_settings_visible
            |> leptos.signal_update not
        inl on_click = join on_click
        !\($'"let on_click = !on_click"')
            
        inl class () =
            if settings_visible |> leptos.signal_get
            then ##""
            else ##"bg-gray-100"

        leptos.icon_button
            (leptos.settings_svg (Some $'"h-5 w-5"') [])
            class
            [
                $'"on:click=move |_| on_click()"'
                $'"aria-label=\\\"Settings\\\""'
            ]
        |> leptos.element_to_view

    ;[
        leptos.accordion "Transactions" true (Some settings_button) fun () =>
            :>(;[
                if settings_visible |> leptos.signal_get
                then
                    leptos.div [
                        $'"class=\\\"px-[12px] py-[10px]\\\""'
                    ] fun () =>
                        :>(;[
                            leptos.divider fun () =>
                                "Settings" |> leptos.text_fragment
                            |> leptos.element_to_view

                            leptos.grid_pair
                                { padding = None; cols = None; class = $'"items-center"' }
                                fun () => "Table View" |> leptos.text_fragment
                                fun () =>
                                    leptos.toggle
                                        "table-view"
                                        fun () =>
                                            leptos.signal_get_untracked global_state.core_state .data
                                            |> leptos.signal_get
                                            |> fun data => data.transactions_view_type = state.Table
                                        fun _ =>
                                            leptos.signal_get_untracked global_state.core_state .data
                                            |> leptos.signal_update fun data =>
                                                inl data = !data
                                                heap {
                                                    data with
                                                        transactions_view_type =
                                                            if data.transactions_view_type = state.Table
                                                            then state.Details
                                                            else state.Table
                                                }
                                        |> leptos.element_to_fragment
                            |> leptos.element_to_view
                        ])
                    |> leptos.element_to_view
                else ;[] |> leptos.views_to_view

                match accounts |> leptos.memo_get with
                | a ;[] =>
                    leptos.div [
                        $'"class=\\\"flex flex-1 items-center [gap:4px] [padding:5px]\\\""'
                    ] fun () => :>(;[
                        leptos.span [
                            $'"class=\\\"[height:20px]\\\""'
                        ] fun () => :>(;[
                            leptos.x_red_svg () |> leptos.element_to_view
                        ])
                        |> leptos.element_to_view

                        leptos.pre [
                            $'"class=\\\"[overflow-y:auto]\\\""'
                        ] fun () =>
                            "No account selected" |> leptos.text_fragment
                        |> leptos.element_to_view
                    ])
                    |> leptos.element_to_view
                | _ =>
                    txns
                    |> leptos.memo_get
                    |> resultm.unbox
                    |> resultm.map optionm'.unbox
                    |> function
                        | Ok (Some transactions) =>
                            match
                                leptos.signal_get_untracked global_state.core_state .data
                                |> leptos.signal_get
                                |> fun data => data.transactions_view_type = state.Details
                            with
                            | true =>
                                leptos.div [
                                    $'"class=\\\"grid flex-1 py-[10px] px-[12px] [gap:15px] sm:[grid-template-columns:repeat(auto-fill,minmax(500px,1fr))]\\\""'
                                ] fun () =>
                                    a transactions
                                    |> am'.map_vec fun account, index', transaction' =>
                                        !transaction'
                                        |> transaction.render account (index' |> i64)
                                        |> leptos.element_to_view
                                    |> fun (a x : _ i32 _) => x
                                    |> leptos.view_array_to_fragment
                                |> leptos.element_to_view

                            | false =>
                                leptos.table [
                                    $'"class=\\\"flex-1 min-w-full divide-y-2 divide-gray-200 text-sm dark:divide-gray-700\\\""'
                                ] fun () =>
                                    :>(;[
                                        leptos.thead [
                                            $'"class=\\\"ltr:text-left rtl:text-right\\\""'
                                        ] fun () =>
                                            :>(;[
                                                transaction.tr_head_render transactions
                                            ])
                                        |> leptos.element_to_view

                                        leptos.tbody [
                                            $'"class=\\\"divide-y divide-gray-200 dark:divide-gray-700\\\""'
                                        ] fun () =>
                                            a transactions
                                            |> am'.map_vec fun account, index', transaction' =>
                                                transaction.tr_render (account, index', transaction')
                                                |> leptos.element_to_view
                                            |> fun (a x : _ i32 _) => x
                                            |> leptos.view_array_to_fragment
                                        |> leptos.element_to_view
                                    ])
                                |> leptos.element_to_view
                        | Error error =>
                            leptos.div [
                                $'"class=\\\"flex flex-1 items-center [gap:4px] [padding:5px]\\\""'
                            ] fun () => :>(;[
                                leptos.span [
                                    $'"class=\\\"[height:20px]\\\""'
                                ] fun () => :>(;[
                                    leptos.x_red_svg () |> leptos.element_to_view
                                ])
                                |> leptos.element_to_view

                                leptos.pre [
                                    $'"class=\\\"[overflow-y:auto]\\\""'
                                ] fun () =>
                                    error |> sm'.from_std_string |> leptos.text_fragment
                                |> leptos.element_to_view
                            ])
                            |> leptos.element_to_view
                        | _ =>
                            leptos.div [
                                $'"class=\\\"grid place-content-center py-[10vh]\\\""'
                            ] fun () =>
                                leptos.div [
                                    $'"class=\\\"flex flex-1 [gap:4px] items-center\\\""'
                                ] fun () => :>(;[
                                    leptos.loading_svg (Some $'"[width:24px] [height:30px]"') |> leptos.element_to_view
                                    $'"Loading..."' |> leptos.text_view
                                ])
                                |> leptos.element_to_fragment
                            |> leptos.element_to_view
            ])
        |> leptos.element_to_view

        if leptos.signal_get_untracked global_state.core_state .debug |> leptos.signal_get then
            leptos.accordion "Debug" true None fun () =>
                :>(;[
                    leptos.grid_pair
                        { padding = None; cols = None; class = "" }
                        fun () => "Transactions" |> leptos.text_fragment
                        fun () =>
                            txns
                            |> leptos.memo_get
                            |> sm'.format_pretty'
                            |> sm'.from_std_string
                            |> leptos.text_block_pre "[max-height:70vh]"
                            |> leptos.element_to_fragment
                ])
            |> leptos.element_to_view
        else ;[] |> leptos.views_to_view
    ]
    |> leptos.view_array_to_fragment
