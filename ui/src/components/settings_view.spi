open rust_operators
open sm'_operators
open leptos

inl global_state_log_render () : _ leptos.pre =
    leptos.log $'"settings_view.global_state_log_render ()"'

    inl global_state : state.global_state = leptos.use_context () |> optionm'.unwrap

    inl global_state_json = leptos.create_memo fun () =>
        leptos.log $'"settings_view.global_state_log_render () / global_state_json memo"'

        inl global_state = join global_state
        inl json : resultm.result' sm'.std_string sm'.std_string =
            !\($'"serde_json::to_string_pretty(&!global_state).map_err(|x| x.to_string())"')
        match json |> resultm.unbox with
        | Ok json => json |> sm'.from_std_string
        | Error error => $'"Error: " + string !error + ""'

    global_state_json |> leptos.signal_get |> ui.text_block_pre.render fun () => ""

inl render () =
    print_static "<settings_view.render>"
    leptos.log $'"settings_view.render ()"'

    inl global_state : state.global_state = leptos.use_context () |> optionm'.unwrap
    
    inl accounts =
        leptos.create_memo fun () =>
            leptos.signal_get_untracked global_state.core_state .data
            |> leptos.signal_get
            |> fun data =>
                data.accounts
                |> am'.vec_mapi fun (i : i32) account =>
                    new_pair
                        i
                        (leptos.create_signal account)
    
    inl edit_count, set_edit_count = leptos.create_signal 0i32

    inl accounts_data =
        leptos.create_memo fun () =>
            inl edit_count = edit_count |> leptos.signal_get
            accounts
            |> leptos.signal_get
            |> am'.vec_map from_pair
            |> am'.vec_map fun i, x =>
                (edit_count, i), x |> fst
    
    inl accounts_count =
        leptos.create_memo fun () =>
            accounts_data |> leptos.signal_get |> am'.from_vec |> length : i32

    inl delete_button index guid =
        inl on_click () =
            rust.move fun () =>
                leptos.signal_get_untracked global_state.core_state .data
                |> leptos.signal_update fun data =>
                    inl data = !data
                    inl accounts = accounts |> leptos.signal_get
                    heap { data with
                        accounts =
                            accounts
                            |> am'.vec_retain (from_pair >> fun i, _ => i = index |> join fun x => x |> not)
                            |> am'.vec_map (from_pair >> snd >> fst >> leptos.signal_get)
                    }
                
                set_edit_count |> leptos.signal_update ((+) 1)
            |> leptos.batch
        inl on_click = join on_click

        ui.icon_button.render
            (svg.cross.render (fun () => "h-5 w-5") [])
            fun () => " pr-[7px] pl-[5px]" |> sm'.to_std_string
            [
                $'"on:click=move |_| !on_click()"'
                $'"aria-label=\\\"Delete\\\""'
            ]

    inl add_button () =
        inl on_click () =
            rust.move fun () =>
                leptos.signal_get_untracked global_state.core_state .data
                |> leptos.signal_update fun data =>
                    inl data = !data
                    inl accounts = accounts |> leptos.signal_get
                    inl accounts_count = accounts |> am'.from_vec |> length
                    heap { data with
                        accounts =
                            accounts
                            |> am'.vec_push (
                                new_pair
                                    accounts_count
                                    (new_pair false ("" |> sm'.to_std_string) |> leptos.create_signal)
                            )
                            |> am'.vec_map (from_pair >> snd >> fst >> leptos.signal_get)
                    }

                set_edit_count |> leptos.signal_update ((+) 1)
            |> leptos.batch
        inl on_click = join on_click

        ui.icon_button.render
            (svg.plus.render (fun () => "h-5 w-5") [])
            fun () => " bg-gray-300" |> sm'.to_std_string
            [
                $'"on:click=move |_| !on_click()"'
                $'"aria-label=\\\"Add\\\""'
            ]

    ;[
        ui.accordion.render
            fun props => { props with
                title = fun () => "Accounts"
                summary_class = fun () => "py-[7px]"
                right_element = add_button () |> leptos.element_to_view |> Some
            }
            fun () =>
                leptos.for
                    accounts_data
                    fun pair =>
                        inl i, _ = pair
                        i
                    fun pair =>
                        inl (_, i), account = pair
                        leptos.div [
                            $'"class=\\\"px-[10px] py-[7px] gap-[7px] [display:flex] [align-items:center]\\\""'
                        ] fun () =>
                            inl i = join i
                            :>(;[
                                ui.toggle.render
                                    fun () => $'"account-" + string !i + ""'
                                    fun () =>
                                        account
                                        |> leptos.signal_get
                                        |> from_pair
                                        |> fst
                                    fun _ =>
                                        inl data =
                                            leptos.signal_get_untracked global_state.core_state .data
                                            |> leptos.signal_get_untracked
                                            |> fun data => !data

                                        leptos.signal_get_untracked global_state.core_state .data
                                        |> leptos.signal_set (heap { data with
                                            accounts =
                                                data.accounts
                                                |> am'.vec_mapi fun i' pair =>
                                                    if i' = i |> fun x => join not x
                                                    then pair
                                                    else
                                                        inl enabled', account' = pair |> from_pair
                                                        new_pair (not enabled') account'
                                        })
                                |> leptos.element_to_view

                                ui.text_input.render
                                    fun () => "flex-1"
                                    [
                                    ]
                                    fun () =>
                                        account |> leptos.signal_get |> from_pair |> snd

                                    fun value =>
                                        inl data =
                                            leptos.signal_get_untracked global_state.core_state .data
                                            |> leptos.signal_get_untracked
                                            |> fun data => !data

                                        leptos.signal_get_untracked global_state.core_state .data
                                        |> leptos.signal_set (heap { data with
                                            accounts =
                                                data.accounts
                                                |> am'.vec_mapi fun i' pair =>
                                                    if i' = i |> fun x => join not x
                                                    then pair
                                                    else
                                                        inl enabled', _ = pair |> from_pair
                                                        new_pair enabled' value
                                        })
                                |> leptos.element_to_view

                                if (accounts_count |> leptos.signal_get) = 1i32
                                then ;[] |> leptos.views_to_view
                                else delete_button i guid |> leptos.element_to_view
                            ])
                        |> leptos.element_to_fragment
                |> leptos.view_to_fragment
        |> leptos.element_to_view

        ui.accordion.render
            fun props => { props with
                title = fun () => "View"
                summary_class = fun () => "py-[7px]"
            }
            fun () => :>(;[
                ui.grid_pair.render
                    fun props => { props with
                        class = fun () => "items-center"
                    }
                    fun () => "Dark Mode" |> leptos.text_fragment
                    fun () =>
                        ui.toggle.render
                            fun () => "dark-mode"
                            fun () =>
                                leptos.signal_get_untracked global_state.core_state .dark_mode
                                |> leptos.signal_get
                            fun _ =>
                                leptos.signal_get_untracked global_state.core_state .dark_mode
                                |> leptos.signal_update not
                            |> leptos.element_to_fragment

                ui.grid_pair.render
                    fun props => { props with
                        class = fun () => "items-center"
                    }
                    fun () => "Debug" |> leptos.text_fragment
                    fun () =>
                        ui.toggle.render
                            fun () => "debug"
                            fun () =>
                                leptos.signal_get_untracked global_state.core_state .debug
                                |> leptos.signal_get
                            fun _ =>
                                leptos.signal_get_untracked global_state.core_state .debug
                                |> leptos.signal_update not
                            |> leptos.element_to_fragment
            ])
        |> leptos.element_to_view

        if leptos.signal_get_untracked global_state.core_state .debug |> leptos.signal_get then
            ui.accordion.render
                fun props => { props with
                    title = fun () => "Debug"
                    summary_class = fun () => "py-[7px]"
                }
                fun () =>
                    ui.grid_pair.render
                        id
                        fun () => "Global State" |> leptos.text_fragment
                        fun () => global_state_log_render () |> leptos.element_to_fragment
                    |> leptos.element_to_fragment
            |> leptos.element_to_view
        else ;[] |> leptos.views_to_view
    ]
    |> leptos.view_array_to_fragment
