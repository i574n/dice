open rust_operators
open model.near.nearblocks

inl tr_head_render transactions =
    leptos.tr [

    ] fun () =>
        :>(;[
            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Account" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Block Timestamp" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Predecessor" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Receiver" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Action" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Action Method" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Deposit" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Fee" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Block Height" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                (a transactions : _ i32 _)
                |> am.exists fun account, _index, (transaction' : heap model.near.nearblocks.txn) =>
                    (a transaction'.logs : _ i32 _)
                    |> am.exists fun log =>
                        (log |> sm'.from_std_string |> sm.length) > 0i32
                |> function
                    | false => ""
                    | _ => "Logs"
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Outcome Status" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Hash" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Block Hash" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Receipt ID" |> leptos.text_fragment
            |> leptos.element_to_view
        ])

inl tr_render account, index', (transaction' : heap model.near.nearblocks.txn) =
    leptos.tr [
        $'"class=\\\"odd:bg-gray-50 dark:odd:bg-gray-800/50\\\""'
    ] fun () =>
        :>(;[
            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                account
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.block_timestamp
                |> date_time.format_timestamp
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.predecessor_account_id
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.receiver_account_id
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            a transaction'.actions
            |> am'.map_vec fun { action method } =>
                :>(;[
                    leptos.td [
                        $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
                    ] fun () =>
                        match action |> sm'.from_std_string with
                        | "FUNCTION_CALL" => "Function Call"
                        | "DEPLOY_CONTRACT" => "Contract Deploy"
                        | "TRANSFER" => "Transfer"
                        | action => action
                        |> leptos.text_fragment
                    |> leptos.element_to_view

                    leptos.td [
                        $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
                    ] fun () =>
                        method
                        |> optionm'.unbox
                        |> optionm.map to_string
                        |> optionm'.default_value "None"
                        |> leptos.text_fragment
                    |> leptos.element_to_view
                ])
            |> am'.map_vec leptos.fragment_to_view
            |> fun (a x : _ i32 leptos.view) => :>x
            |> leptos.fragment_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.actions_agg.deposit
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.outcomes_agg.transaction_fee
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.block.block_height
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500 [overflow:auto]\\\""'
            ] fun () =>
                match transaction'.logs with
                | ;[] => "" |> leptos.text_fragment
                | _ =>
                    (a transaction'.logs : _ i32 _)
                    |> am'.map_vec sm'.from_std_string
                    |> sm'.concat "\n"
                    |> sm'.replace "\\n" "\n"
                    |> leptos.text_block_pre "[max-height:20vh] [width:100vw] [max-width:100vw]"
                    |> leptos.element_to_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.outcomes.status
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                transaction'.transaction_hash
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                    transaction'.included_in_block_hash
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                    transaction'.receipt_id
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view
        ])

inl render account (index : i64) (transaction : txn) : _ leptos.div =
    print_static "<transaction.render>"

    inl global_state : state.global_state = leptos.use_context () |> optionm'.unwrap

    leptos.div [
        $'"class=\\\"flex flex-1 flex-col overflow-x-auto\\\""'
    ] fun () => :>(;[
        leptos.divider fun () =>
            $'"Transaction " + string (!index + 1L) + ""' |> leptos.text_fragment
        |> leptos.element_to_view

        leptos.div [
            $'"class=\\\"grid flex-1 divide-y-[1px] divide-gray-500/[.10]\\\""'
        ] fun () => :>(;[
            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Account" |> leptos.text_fragment
                fun () =>
                    account
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Block Timestamp" |> leptos.text_fragment
                fun () =>
                    transaction.block_timestamp
                    |> date_time.format_timestamp
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Predecessor" |> leptos.text_fragment
                fun () =>
                    transaction.predecessor_account_id
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Receiver" |> leptos.text_fragment
                fun () =>
                    transaction.receiver_account_id
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some "sm:pr-[10px]"; cols = None; class = "items-center py-[4px]" }
                fun () => "Actions" |> leptos.text_fragment
                fun () =>
                    a transaction.actions
                    |> am'.map_vec fun { action method } =>
                        leptos.grid_pair
                            { padding = Some "items-center"; cols = Some ""; class = "" }
                            fun () =>
                                match action |> sm'.from_std_string with
                                | "FUNCTION_CALL" => "Function Call:"
                                | "DEPLOY_CONTRACT" => "Contract Deploy:"
                                | "TRANSFER" => "Transfer:"
                                | action => action
                                |> leptos.text_fragment
                            fun () =>
                                leptos.div [
                                    $'"class=\\\"flex flex-1 flex-col\\\""'
                                ] fun () => :>(;[
                                    leptos.grid_pair
                                        { padding = Some ""; cols = None; class = "" }
                                        fun () => "Method" |> leptos.text_fragment
                                        fun () =>
                                            match method |> optionm'.unbox with
                                            | Some method =>
                                                method
                                                |> to_string
                                                |> leptos.text_fragment
                                            | None =>
                                                "None" |> leptos.text_fragment
                                    |> leptos.element_to_view
                                ])
                                |> leptos.element_to_fragment
                    |> fun (a x : _ i32 _) => :>x
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Deposit" |> leptos.text_fragment
                fun () =>
                    transaction.actions_agg.deposit
                    |> sm'.obj_to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Outcome Status" |> leptos.text_fragment
                fun () =>
                    transaction.outcomes.status
                    |> sm'.obj_to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Fee" |> leptos.text_fragment
                fun () =>
                    transaction.outcomes_agg.transaction_fee
                    |> sm'.obj_to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Block Height" |> leptos.text_fragment
                fun () =>
                    transaction.block.block_height
                    |> sm'.obj_to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Hash" |> leptos.text_fragment
                fun () =>
                    transaction.transaction_hash
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Block Hash" |> leptos.text_fragment
                fun () =>
                    transaction.included_in_block_hash
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.grid_pair
                { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                fun () => "Receipt ID" |> leptos.text_fragment
                fun () =>
                    transaction.receipt_id
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            match transaction.logs with
            | ;[] => ;[] |> leptos.views_to_view
            | _ =>
                leptos.grid_pair
                    { padding = Some ""; cols = None; class = "items-center py-[4px]" }
                    fun () => "Logs" |> leptos.text_fragment
                    fun () =>
                        (a transaction.logs : _ i32 _)
                        |> am'.map_vec sm'.from_std_string
                        |> sm'.concat "\n"
                        |> sm'.replace "\\n" "\n"
                        |> leptos.text_block_pre "[max-height:20vh]"
                        |> leptos.element_to_fragment
                |> leptos.element_to_view
        ])
        |> leptos.element_to_view
    ])
