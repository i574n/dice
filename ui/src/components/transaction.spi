open rust.rust_operators
open leptos
open model.near.nearblocks

inl action_render action method =
    ui.grid_pair.render
        fun props => { props with
            class = fun () => ""
            cols_class = fun () => ""
            dd_class = fun () => ""
            padding_class = fun () => "items-center"
        }
        fun () =>
            match action |> sm'.from_std_string with
            | "FUNCTION_CALL" => "Function Call:"
            | "DEPLOY_CONTRACT" => "Contract Deploy:"
            | "TRANSFER" => "Transfer:"
            | action => action
            |> leptos.text_fragment
        fun () =>
            leptos.div [
                $'"class=\\\"flex flex-1 flex-col\\\""'
            ] fun () => :>(;[
                ui.grid_pair.render
                    fun props => { props with
                        class = fun () => ""
                        dd_class = fun () => ""
                        padding_class = fun () => ""
                    }
                    fun () => "Method" |> leptos.text_fragment
                    fun () =>
                        match method |> optionm'.unbox with
                        | Some method =>
                            method
                            |> to_string
                            |> leptos.text_fragment
                        | None =>
                            "None" |> leptos.text_fragment
                |> leptos.element_to_view
            ])
            |> leptos.element_to_fragment

inl tr_head_render (transactions : array_base hooks.use_transactions.account_transaction) =
    print_static "<transaction.tr_head_render>"
    leptos.log $'"transaction.tr_head_render (1)"'

    leptos.tr [

    ] fun () =>
        :>(;[
            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Account" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Block Timestamp" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Predecessor" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Receiver" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Action" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Deposit" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Fee" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Block Height" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                (a transactions : _ i32 _)
                |> am.exists' fun { txn } =>
                    (a txn.logs : _ i32 _)
                    |> am.exists' fun log =>
                        (log |> sm'.from_std_string |> sm.length) > 0i32
                |> function
                    | false => ""
                    | _ => "Logs"
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Outcome Status" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Hash" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Block Hash" |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.th [
                $'"class=\\\"whitespace-nowrap px-4 py-2 font-medium text-gray-900 dark:text-white\\\""'
            ] fun () =>
                "Receipt ID" |> leptos.text_fragment
            |> leptos.element_to_view
        ])

inl tr_render ({ account txn } : hooks.use_transactions.account_transaction) =
    print_static "<transaction.tr_render>"
    leptos.log $'"transaction.tr_render (1)"'

    leptos.tr [
        $'"class=\\\"odd:bg-gray-50 dark:odd:bg-gray-800/50\\\""'
    ] fun () =>
        :>(;[
            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                account
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.block_timestamp
                |> sm'.from_std_string
                |> i64
                |> date_time.format_timestamp
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.predecessor_account_id
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.receiver_account_id
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.actions
                |> am'.to_vec
                |> am'.vec_map' fun { action method } =>
                    action_render action method
                    |> leptos.element_to_view
                |> am'.from_vec
                |> fun x => x : _ i32 _
                |> fun (a x) => x
                |> leptos.view_array_to_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.actions_agg.deposit
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.outcomes_agg.transaction_fee
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.block.block_height
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500 [overflow:auto]\\\""'
            ] fun () =>
                match txn.logs with
                | ;[] => "" |> leptos.text_fragment
                | _ =>
                    txn.logs
                    |> am'.to_vec
                    |> am'.vec_map' sm'.from_std_string
                    |> am'.from_vec
                    |> fun x => x : _ i32 _
                    |> seq.of_array
                    |> sm'.concat "\n"
                    |> sm'.replace "\\n" "\n"
                    |> ui.text_block_pre.render fun () => "[max-height:20vh] [width:100vw] [max-width:100vw]"
                    |> leptos.element_to_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.outcomes.status
                |> sm'.obj_to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                txn.transaction_hash
                |> to_string
                |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                    txn.included_in_block_hash
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view

            leptos.td [
                $'"class=\\\"whitespace-nowrap px-4 py-2 text-gray-700 dark:text-gray-500\\\""'
            ] fun () =>
                    txn.receipt_id
                    |> to_string
                    |> leptos.text_fragment
            |> leptos.element_to_view
        ])

inl render account (index : i64) (transaction : txn) : _ leptos.div =
    print_static "<transaction.render>"
    leptos.log $'"transaction.render (1)"'

    inl global_state : state.global_state = leptos.use_context () |> optionm'.unwrap

    leptos.div [
        $'"class=\\\"flex flex-1 flex-col overflow-x-auto\\\""'
    ] fun () => :>(;[
        ui.divider.render fun () =>
            $'"Transaction " + string (!index + 1L) + ""' |> leptos.text_fragment
        |> leptos.element_to_view

        leptos.div [
            $'"class=\\\"grid flex-1 divide-y-[1px] divide-gray-500/[.10]\\\""'
        ] fun () =>
            :>(;[
                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Account" |> leptos.text_fragment
                    fun () =>
                        account
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Block Timestamp" |> leptos.text_fragment
                    fun () =>
                        transaction.block_timestamp
                        |> sm'.from_std_string
                        |> i64
                        |> date_time.format_timestamp
                        |> to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Predecessor" |> leptos.text_fragment
                    fun () =>
                        transaction.predecessor_account_id
                        |> to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Receiver" |> leptos.text_fragment
                    fun () =>
                        transaction.receiver_account_id
                        |> to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => "sm:pr-[10px]"
                        class = fun () => "items-center py-[4px]"
                        dd_class = fun () => "[flex-direction:column]"
                    }
                    fun () => "Actions" |> leptos.text_fragment
                    fun () =>
                        transaction.actions
                        |> am'.to_vec
                        |> am'.vec_map' fun { action method } =>
                            action_render action method
                            |> leptos.element_to_view
                        |> am'.from_vec
                        |> fun ((a x) : _ i32 _) => x
                        |> leptos.view_array_to_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Deposit" |> leptos.text_fragment
                    fun () =>
                        transaction.actions_agg.deposit
                        |> sm'.obj_to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Outcome Status" |> leptos.text_fragment
                    fun () =>
                        transaction.outcomes.status
                        |> sm'.obj_to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Fee" |> leptos.text_fragment
                    fun () =>
                        transaction.outcomes_agg.transaction_fee
                        |> sm'.obj_to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Block Height" |> leptos.text_fragment
                    fun () =>
                        transaction.block.block_height
                        |> sm'.obj_to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Hash" |> leptos.text_fragment
                    fun () =>
                        transaction.transaction_hash
                        |> to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Block Hash" |> leptos.text_fragment
                    fun () =>
                        transaction.included_in_block_hash
                        |> to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                ui.grid_pair.render
                    fun props => { props with
                        padding_class = fun () => ""
                        class = fun () => "items-center py-[4px]"
                    }
                    fun () => "Receipt ID" |> leptos.text_fragment
                    fun () =>
                        transaction.receipt_id
                        |> to_string
                        |> leptos.text_fragment
                |> leptos.element_to_view

                match transaction.logs with
                | ;[] => ;[] |> leptos.views_to_view
                | _ =>
                    ui.grid_pair.render
                        fun props => { props with
                            padding_class = fun () => ""
                            class = fun () => "items-center py-[4px]"
                        }
                        fun () => "Logs" |> leptos.text_fragment
                        fun () =>
                            transaction.logs
                            |> am'.to_vec
                            |> am'.vec_map' sm'.from_std_string
                            |> am'.from_vec
                            |> fun x => x : _ i32 _
                            |> seq.of_array
                            |> sm'.concat "\n"
                            |> sm'.replace "\\n" "\n"
                            |> ui.text_block_pre.render fun () => "[max-height:20vh]"
                            |> leptos.element_to_fragment
                    |> leptos.element_to_view
            ])
        |> leptos.element_to_view
    ])
